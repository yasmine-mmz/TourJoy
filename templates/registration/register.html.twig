{% extends 'FrontOffice/navbar.html.twig' %}

{% block navbar %}

	<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">


{% endblock %}


{% block body %}


	<style>
		body,
		html {
			cursor: none;
			margin: 0;
			height: 100%;
			overflow: hidden;
		}

		input::-webkit-outer-spin-button,
		input::-webkit-inner-spin-button {
			-webkit-appearance: none;
			margin: 0;
		}


		/* Main styles */
		.container {
			font-family: 'Arial', sans-serif; /* Change as per your preference */

		}

		.card {
			background: transparent;
			border-radius: 15px;
			padding: 20px;
			backdrop-filter: blur(10px);
			border: none;
			box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
			color: #333;
			margin-top: 8vh;
		}

		.card-header {
			background-color: transparent;
			border-bottom: none;
			color: #f86c52; /* You can adjust this color */
			font-size: 30px; /* Adjusted for balance */
			text-align: center;
			font-weight: bold;
			padding-bottom: 20px;
		}

		.back-to-previous {
			display: inline-flex;
			align-items: center;
			justify-content: center;
			margin-right: 10px; /* Space between the back arrow and the text */
			color: #007bff; /* Color of the arrow, adjust as needed */
			text-decoration: none; /* Removes underline from the link */
		}

		.back-to-previous:hover {
			color: #0056b3; /* Darker shade on hover */
		}

		/* Input field styles */
		.form-control {
			border-radius: 12px;
			border: 1px solid #36454F;
			/* A light grey bottom border */
			padding: 18px;
			background: transparent;
			margin-bottom: 15px; /* Space between fields */
			color: white;
		}

		.form-control::placeholder {
			/* Change placeholder color */
			color: #fff; /* Example placeholder color, you can change this */
			opacity: 0.4; /* Firefox lowers the opacity by default */
		}

		/* Label styles */
		.form-check-label {
			display: block; /* Makes label take the full width */
			text-align: center;
			margin-bottom: 15px;
			color: #fff; /* Adjust if needed */
		}

		/* Responsive adjustments */
		@media(max-width: 768px) {
			.card {
				margin: 0 20px; /* Adds some margin on smaller screens */
			}
		}

		/* Button styles */
		#submit-btn {
			background-color: #007bff;
			border: none;
			padding: 15px;
			width: 100%;
			font-size: 18px;
			font-weight: bold;
			color: white;
			margin-top: 10px;
			transition: background-color 0.3s ease;
		}

		#submit-btn:hover {
			background-color: transparent;
			color: #007bff;
			border: 1px
		}

		#plane {
			pointer-events: none; /* Ignore the cursor itself for click events */
			width: 50px; /* Adjust based on your icon size */
			transition: transform 0.1s ease-out; /* Smooth movement */
			color: #fff;


		}

		@keyframes trail {
			from {
				opacity: 1;
			}
			to {
				opacity: 0;
			}
		}

		.video-background {
			position: fixed;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0; /* Cover the entire viewport */
			display: flex;
			justify-content: center; /* Center horizontally */
			align-items: center; /* Center vertically */
			z-index: -1000; /* Ensure it stays behind other content */
			overflow: hidden;
		}

		.video-background video {
			max-width: 100%; /* Maximum width of the video */
			max-height: 120vh; /* Maximum height of the video */
			object-fit: cover; /* Maintain aspect ratio */
		}

		.form-check-input {
			margin-left: 38%;
		}


		.password-container {
			position: relative;
			display: flex;
			align-items: center;
			width: 100%;
		}

		.password-field {
			flex: 1; /* Ensure input field takes up the full width of its container */
			padding-right: 30px; /* Make space for the icon inside the field */
		}

		.toggle-password {
			position: absolute;
			right: 10px;
			cursor: pointer;
			color: #007bff; /* Adjust color as needed */
			font-size: 18px; /* Adjust the size as needed */
			margin-top: -1vh;
		}

		.generate-password {
			display: flex;
			justify-content: center;
			align-items: center;
			margin-top: 10px; /* Space between the button and the password field */
			padding: 10px; /* Adjust padding to fit the icon */
			background-color: #17a2b8; /* Bootstrap info color */
			color: white; /* Icon color */
			border: none; /* Remove default border */
		}

		.generate-password:hover {
			background-color: #138496; /* Slightly darker shade on hover */
			color: #fff; /* Keep icon color white on hover */
		}
		.notification-container {
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
			background-color: #efe7d8;
			color: #fb6c52;
			text-align: center;
			padding: 10px;
			box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
			z-index: 1000;
		}

		.notification-container p {
			margin: 0;
			padding: 0;
			display: inline-block;
		}

		.notification-container button {
			float: right;
			margin-right: 20px;
			border: none;
			background-color: transparent;
			color: white;
			cursor: pointer;
		}

		.password-strength-meter {
			height: 10px;
			background: #ddd;
			border-radius: 5px;
			overflow: hidden;
			margin-bottom: 1.2vh;
		}

		.password-strength-meter > div {
			height: 100%;
			width: 0;
			transition: width 0.3s ease-in-out;
		}

		.strength-weak > div {
			background-color: #ff4757; /* Weak password color */
		}

		.strength-medium > div {
			background-color: #ffa502; /* Medium strength color */
		}

		.strength-strong > div {
			background-color: #2ed573; /* Strong password color */
		}
	</style>

	<div id="copyNotification" class="notification-container" style="display:none;">
		<p>Password copied to clipboard! We recommend using an open-source password manager to store it, like
			<a href="https://keepassxc.org/" target="_blank" style="color: #559a39; font-weight: bold;">KeePassXC</a>.</p>
		<button onclick="closeNotification()">X</button>
	</div>


	<div class="video-background">
		<video playsinline="playsinline" autoplay="autoplay" muted="muted" loop="loop">
			<source src="img/airplane.mp4" type="video/mp4">
		</video>
	</div>


	<div class="container mt-5">
		<div class="row justify-content-center">
			<div class="col-md-8">
				<div class="card">
					<div class="card-header">
						<a
							href="javascript:history.back()" class="back-to-previous" aria-label="Back to previous page">
							<!-- This is a simple SVG for a left arrow. Replace with an icon from a library if preferred. -->
							<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-arrow-left" viewbox="0 0 16 16">
								<path fill-rule="evenodd" d="M15 8a.5.5 0 000-1H2.707l3.147-3.146a.5.5 0 000-.708l-.708-.708a.5.5 0 01-.708 0l-4 4a.5.5 0 010 .708l4 4a.5.5 0 01.708 0l.708-.708a.5.5 0 000-.708L2.707 8H15z"/>
							</svg>
						</a>CREATE ACCOUNT</div>
					<div class="card-body">
						{{ form_start(registrationForm, {'attr': {'novalidate': 'novalidate'}}) }}
						<!-- Registration form fields -->
						{{ form_widget(registrationForm.email, {'attr': {'class': 'form-control', 'placeholder': 'Your Email', 'id': 'registration_form_email'}}) }}
						{{ form_errors(registrationForm.email) }}
						{{ form_widget(registrationForm.phoneNumber, {'attr': {'class': 'form-control', 'placeholder': 'Phone Number'}}) }}
						{{ form_errors(registrationForm.phoneNumber) }}

						<!-- Password Field -->
						<div class="password-container d-flex justify-content-between">
							{{ form_widget(registrationForm.plainPassword, {'attr': {'class': 'form-control password-field', 'placeholder': 'Password', 'id': 'registration_form_plainPassword'}}) }}
							<span class="toggle-password fa fa-eye-slash fa-lg"></span>
							{{ form_errors(registrationForm.plainPassword) }}
						</div>
						<!-- Password Strength Indicator -->
						<div class="password-strength-meter" id="password-strength-meter">
							<div></div>
						</div>

						<!-- Confirm Password Field -->
						<div class="password-container">
							{{ form_widget(registrationForm.confirmPassword, {'attr': {'class': 'form-control password-field', 'placeholder': 'Repeat your password', 'id': 'registration_form_confirmPassword'}}) }}
							<span class="toggle-password fa fa-eye-slash fa-lg"></span>
							{{ form_errors(registrationForm.confirmPassword) }}
						</div>

						<div id="secretKeyContainer" style="display:none;">
							{{ form_widget(registrationForm.secretKey, {'attr': {'class': 'form-control', 'placeholder': 'Secret key provided by the HR team'}}) }}
							{{ form_errors(registrationForm.secretKey) }}
						</div>

						<div class="form-check">
							{{ form_widget(registrationForm.isAdmin, {'attr': {'class': 'form-check-input'}}) }}
							{{ form_label(registrationForm.isAdmin, 'Register as admin?' , {'label_attr': {'class': 'form-check-label'}}) }}

							{{ form_widget(registrationForm.agreeTerms, {'attr': {'class': 'form-check-input'}}) }}
							{{ form_label(registrationForm.agreeTerms, 'I agree to the terms', {'label_attr': {'class': 'form-check-label'}}) }}
							{{ form_errors(registrationForm.agreeTerms) }}
						</div>
						<div style="position: relative;">
							<button type="button" class="btn btn-info generate-password position-absolute btn-block" title="Generate Strong Password">
								<i class="fas fa-key"></i>
							</button>
						</div>
						<button id="submit-btn" type="submit" class="btn btn-primary">SIGN UP</button>
						{{ form_end(registrationForm) }}
					</div>
					<div class="card-footer text-center ">
						Already have an account?
						<a href="/login" style="color: #f86c52">Login here</a>
					</div>
				</div>
			</div>
		</div>
	</div>

	<img id="plane" src="img/plane2.svg" alt="Plane" style="position: absolute; display: none; width: 50px; pointer-events: none;">

{% endblock %}

{% block footer %}

	<script>
		document.addEventListener('mousemove', function (e) {
const plane = document.getElementById('plane');
const mouseX = e.clientX;
const mouseY = e.clientY;
plane.style.left = mouseX + 'px';
plane.style.top = mouseY + 'px';
plane.style.display = 'block';
});


document.addEventListener('DOMContentLoaded', function () {
const isAdminCheckbox = document.getElementById('registration_form_isAdmin');
const secretKeyContainer = document.getElementById('secretKeyContainer');

// Event listener for checkbox change
isAdminCheckbox.addEventListener('change', function () {
if (this.checked) {
secretKeyContainer.style.display = 'block';
} else {
secretKeyContainer.style.display = 'none';
}
});
});


document.addEventListener('DOMContentLoaded', function () {
document.querySelectorAll('.toggle-password').forEach(function (toggleButton) {
toggleButton.addEventListener('click', function () {
const passwordField = this.previousElementSibling;
const isPasswordVisible = passwordField.type === 'text';


passwordField.type = isPasswordVisible ? 'password' : 'text';


this.classList.toggle('fa-eye', ! isPasswordVisible);
this.classList.toggle('fa-eye-slash', isPasswordVisible);
});
});
});


document.querySelector('.generate-password').addEventListener('click', function () {
const password = generateStrongPassword();
const passwordField = document.getElementById('registration_form_plainPassword');
const confirmPasswordField = document.getElementById('registration_form_confirmPassword');

passwordField.value = password;
confirmPasswordField.value = password;

passwordField.dispatchEvent(new Event('input'));

navigator.clipboard.writeText(password).then(() => {
document.getElementById('copyNotification').style.display = 'block';
setTimeout(() => {
document.getElementById('copyNotification').style.display = 'none';
}, 3000);
}).catch(err => {
console.error('Could not copy password to clipboard: ', err);
});
});

function generateStrongPassword() {
const length = 18;
const charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]:;?><,./-=";
let retVal = "";
for (let i = 0, n = charset.length; i < length; ++ i) {
retVal += charset.charAt(Math.floor(Math.random() * n));
}
return retVal;
}

function closeNotification() {
document.getElementById('copyNotification').style.display = 'none';
}


function updatePasswordStrengthIndicator(password) {
const meter = document.getElementById('password-strength-meter').firstElementChild;
let width,
className;

if (password.length === 0) {
width = '0%';
className = '';
} else {
const strength = getPasswordStrength(password);
switch (strength) {
case 'weak': width = '33%';
className = 'strength-weak';
break;
case 'medium': width = '66%';
className = 'strength-medium';
break;
case 'strong': width = '100%';
className = 'strength-strong';
break;
default: width = '0%';
className = '';
}
} meter.style.width = width;
meter.parentNode.className = `password-strength-meter ${className}`;
}

function getPasswordStrength(password) {
let strength = 'weak';
let score = 0;
if (password.length > 6) 
score++;



if (password.match(/[a-z]/)) 
score++;



if (password.match(/[A-Z]/)) 
score++;



if (password.match(/\d+/)) 
score++;



if (password.match(/[\!@#$%^&*\(\)_\+~`|}{\[\]:;?><,./\\-]/)) 
score++;



if (score > 4) 
strength = 'strong';
 else if (score > 2) 
strength = 'medium';



return strength;
}

document.getElementById('registration_form_plainPassword').addEventListener('input', function () {
updatePasswordStrengthIndicator(this.value);
});

document.getElementById('registration_form_confirmPassword').addEventListener('input', function () {
updatePasswordStrengthIndicator(this.value);
});
	</script>


{% endblock %}
